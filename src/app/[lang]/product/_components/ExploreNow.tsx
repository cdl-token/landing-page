"use client";

import { cn } from "@/lib/utils";
import { useState } from "react";
import LightGraph from "./LightGraph";
import { motion } from "framer-motion";
import { leftVariant, rightVariants } from "@/lib/animation-variants";

const ExploreNow = () => {
  const tabs = ["chart", "nft", "holders"];
  const [selectedTab, setSelectedTab] = useState("chart");
  return (
    <div className="static z-10 flex w-full items-center justify-center gap-3">
      <div className="flex w-full max-w-7xl flex-col items-center justify-center gap-10 border-b border-white/30 px-5 py-10 text-center">
        <div className="flex flex-col items-center justify-center gap-2">
          <motion.h1
            initial="hide"
            whileInView="show"
            exit="show"
            variants={leftVariant(0)}
            className="font-neue text-3xl font-bold uppercase md:text-[45px] md:leading-[50px]"
          >
            Explore Now
          </motion.h1>
          <motion.span
            initial="hide"
            whileInView="show"
            exit="show"
            variants={rightVariants(0)}
            className="text- max-w-[406px] font-apfel uppercase"
          >
            Choose your data type and view the API code from CDL Token below.
          </motion.span>
        </div>
        <div className="h-full min-h-[45rem] w-full overflow-hidden rounded-2xl border border-white/30">
          <div className="flex w-full items-center">
            {tabs.map((tab, index) => (
              <button
                className={cn(
                  "flex w-full items-center justify-center gap-1 border-b-2 py-5 font-apfel uppercase",
                  selectedTab === tab ? "border-primary" : "border-white/30",
                )}
                onClick={() => setSelectedTab(tab)}
                key={index}
              >
                {tab === "chart"
                  ? chartdataSvg
                  : tab === "nft"
                    ? nftdataSvg
                    : holdersdataSvg}
                {tab} <span className="hidden pl-0.5 md:inline">data</span>
              </button>
            ))}
          </div>
          <div className="flex h-full w-full p-5">
            {selectedTab === "chart" && <LightGraph />}
            {selectedTab === "nft" && <p>Coming Soon</p>}
            {selectedTab === "holders" && <p>Coming Soon</p>}
          </div>
        </div>
        <div className="grid w-full gap-5 md:grid-cols-2">
          <div className="flex h-[35rem] w-full max-w-full flex-col items-start gap-3 overflow-auto rounded-2xl border border-white/30 px-5 py-4 text-start">
            <h1 className="text-2xl font-semibold">QUERY</h1>
            {queryCode}
          </div>
          <div className="flex h-[35rem] w-full flex-col items-start gap-3 rounded-2xl border border-white/30 px-5 py-4">
            <h1 className="text-2xl font-semibold">RESPONSE</h1>
            {responseCode}
          </div>
        </div>
      </div>
    </div>
  );
};

const chartdataSvg = (
  <svg
    width="19"
    height="19"
    viewBox="0 0 19 19"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M7.09375 4.14062V7.14062"
      stroke="#F9F9F9"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M7.84375 7.14062H6.34375C5.92954 7.14062 5.59375 7.47641 5.59375 7.89062V10.8906C5.59375 11.3048 5.92954 11.6406 6.34375 11.6406H7.84375C8.25796 11.6406 8.59375 11.3048 8.59375 10.8906V7.89062C8.59375 7.47641 8.25796 7.14062 7.84375 7.14062Z"
      stroke="#F9F9F9"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M7.09375 11.6406V13.1406"
      stroke="#F9F9F9"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M13.0938 2.64062V4.14062"
      stroke="#F9F9F9"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M13.8438 4.14062H12.3438C11.9295 4.14062 11.5938 4.47641 11.5938 4.89062V9.39062C11.5938 9.80484 11.9295 10.1406 12.3438 10.1406H13.8438C14.258 10.1406 14.5938 9.80484 14.5938 9.39062V4.89062C14.5938 4.47641 14.258 4.14062 13.8438 4.14062Z"
      stroke="#F9F9F9"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M13.0938 10.1406V12.3906"
      stroke="#F9F9F9"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M2.59375 2.64062V16.1406H16.0938"
      stroke="#F9F9F9"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const nftdataSvg = (
  <svg
    width="19"
    height="19"
    viewBox="0 0 19 19"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M7.0625 9.39062C7.89095 9.39062 8.5625 8.71908 8.5625 7.89062C8.5625 7.0622 7.89095 6.39062 7.0625 6.39062C6.23407 6.39062 5.5625 7.0622 5.5625 7.89062C5.5625 8.71908 6.23407 9.39062 7.0625 9.39062ZM16.4375 5.26562L9.3125 1.14062L2.1875 5.26562V13.5156L9.3125 17.6406L16.4375 13.5156V5.26562ZM9.3125 2.87388L14.9375 6.13046V11.291L11.5159 9.23808L5.53752 13.7219L3.6875 12.6508V6.13046L9.3125 2.87388ZM9.3125 15.9074L6.94841 14.5387L11.6091 11.0432L14.6071 12.8421L9.3125 15.9074Z"
      fill="#F9F9F9"
    />
  </svg>
);

const holdersdataSvg = (
  <svg
    width="19"
    height="19"
    viewBox="0 0 19 19"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clipPath="url(#clip0_3544_8063)">
      <path
        d="M6.48634 2.92197L9.56251 6.1915L12.6387 2.92197H6.48634ZM14.059 3.87471L11.5137 6.57822H16.0488L14.059 3.87471ZM15.8168 8.26572H9.56251H3.30822L9.56251 15.1669L15.8168 8.26572ZM3.07618 6.57822H7.61134L5.06603 3.87471L3.07618 6.57822ZM18.3445 7.98799L10.1883 16.988C10.0301 17.1638 9.80158 17.2657 9.56251 17.2657C9.32345 17.2657 9.09845 17.1638 8.93673 16.988L0.780482 7.98799C0.509779 7.68916 0.488685 7.24268 0.727748 6.91924L4.66525 1.57549C4.82345 1.36104 5.07658 1.23096 5.34376 1.23096H13.7813C14.0485 1.23096 14.3016 1.35752 14.4598 1.57549L18.3973 6.91924C18.6363 7.24268 18.6117 7.68916 18.3445 7.98799Z"
        fill="#F9F9F9"
      />
    </g>
    <defs>
      <clipPath id="clip0_3544_8063">
        <rect
          width="18"
          height="18"
          fill="white"
          transform="translate(0.5625 0.390625)"
        />
      </clipPath>
    </defs>
  </svg>
);

const queryCode = (
  <pre className="max-w-full overflow-auto text-sm text-white/70">
    <span className="text-primary">query</span>
    {` Chart(`}
    <span className="text-[#A5D8FF]">$symbol</span>
    {`: String!, `}
    <span className="text-[#A5D8FF]">$from</span>
    {`: Int!, `}
    <span className="text-[#A5D8FF]">$to</span>
    {`: Int!, `}
    <span className="text-[#A5D8FF]">$resolution</span>
    {`: String!, `}
    <span className="text-[#A5D8FF]">$quoteToken</span>
    {`: QuoteToken, `}
    <span className="text-[#A5D8FF]">$statsType</span>
    {`: TokenPairStatisticsType) {`} <br />
    <span className="pl-4">{`getBars(`}</span>
    <br />
    <span className="pl-8 text-[#FF922B]">symbol</span>
    <span className="text-[#A5D8FF]">: $symbol</span> <br />
    <span className="pl-8 text-[#FF922B]">from</span>
    <span className="text-[#A5D8FF]">: $from</span> <br />
    <span className="pl-8 text-[#FF922B]">to</span>
    <span className="text-[#A5D8FF]">: $to</span> <br />
    <span className="pl-8 text-[#FF922B]">resolution</span>
    <span className="text-[#A5D8FF]">: $resolution</span> <br />
    <span className="pl-8 text-[#FF922B]">quoteToken</span>
    <span className="text-[#A5D8FF]">: $quoteToken</span> <br />
    <span className="pl-8 text-[#FF922B]">statsType</span>
    <span className="text-[#A5D8FF]">: $statsType</span>
    {`
) {
s
o
h
l
c
t
volume
volumeNativeToken
buys
buyers
buyVolume
sells
sellers
sellVolume
liquidity
traders
transactions
}
}`}
  </pre>
);

const responseCode = (
  <pre className="max-w-full overflow-auto text-start text-sm text-[#A5D8FF]">
    {`{
"getBars": {
"s": "ok",
"o": [
239.813451391,
239.340625024,
239.49884066,
239.324389349,
239.666923549,
239.557288419,
239.591499184,
239.455530907,
239.610088474,
239.867871068,
239.947847865,
239.716492787,
239.724449614,
239.90680803,
239.968063064,
240.139570995,
240.167895581,
240.090413358,
240.082783465,
240.250155512,
239.980939727,
240.230380481,
240.083780139,
240.004580023,
240.173018288,
240.156530157,
240.493661941,
240.58802171,
240.25988656,
239.844385038,
239.498340965,
239.590049302,
239.753590211,
239.87510253,
240.361344714,
240.428347484,
240.455869199,
240.398453531,
240.701989475,
240.491267926,
240.632272521,
240.716660934,
240.749453978,
240.540834583,
240.633255313,
240.388153833,
240.545827926,
240.593380454,
240.694452158,
240.189807518,
240.171696738,
240.029496091,
240.194701397,
240.076888823,
239.99750373,
239.648327299,
239.447012993,
239.800873468,
239.459850611,
239.658258727,
239.870189064
],
"h": [
239.813451391,
239.585464848,
239.575808858,
239.674833016,
239.792259699,
239.591499184,
239.622784023,
239.610088474,
239.867871068,
240.142357175,
239.947847865,
239.781528526,
239.945867458,
240.044054522,
240.139570995,
240.167895581,
240.267322977,
240.212056032,
240.274695458,
240.313322886,
240.23218956,
240.257959942,
240.140775959,
240.188935028,
240.390199341,
240.493661941,
240.5936696,
240.603612346,
240.260500099,
239.844385038,
239.715337466,
239.858014628,
239.878090181,
240.361344714,
240.576052015,
240.613587535,
240.591046511,
240.701989475,
240.701989475,
240.632272521,
240.730590261,
240.784200321,
240.749453978,
240.718614589,
240.655414012,
240.557979131,
240.662061838,
240.761504633,
240.694452158,
240.382539871,
240.225879503,
240.194701397,
240.194701397,
240.182415631,
240.005140004,
239.648327299,
239.857873749,
240.045546351,
239.658258727,
239.927008123,
239.991522615
],
"l": [
239.340625024,
239.327968755,
239.282979567,
239.209462085,
239.557288419,
239.394435558,
239.455530907,
239.370471512,
239.604365579,
239.867871068,
239.716492787,
239.581764326,
239.722982585,
239.816892025,
239.92642014,
240.101841055,
240.065034605,
240.006577948,
240.067436152,
239.916820448,
239.917995246,
240.064348747,
239.987700056,
239.989517445,
240.156530157,
240.156530157,
240.399886915,
240.25988656,
239.844385038,
239.383196055,
239.498340965,
239.590049302,
239.681743852,
239.804068375,
240.361344714,
240.413466874,
240.36881437,
240.398234134,
240.491267926,
240.408237004,
240.3601787,
240.583304507,
240.540834583,
240.486211573,
240.368614614,
240.333287571,
240.503704477,
240.495517659,
240.189807518,
240.171696738,
240.029496091,
240.013429791,
239.933257956,
239.977043474,
239.612358211,
239.422974156,
239.44312226,
239.416592136,
239.459850611,
239.63343521,
239.870189064
],
"c": [
239.340625024,
239.49884066,
239.324389349,
239.666923549,
239.557288419,
239.591499184,
239.455530907,
239.610088474,
239.867871068,
239.947847865,
239.716492787,
239.724449614,
239.90680803,
239.968063064,
240.139570995,
240.167895581,
240.090413358,
240.082783465,
240.250155512,
239.980939727,
240.230380481,
240.079786278,
240.004580023,
240.173018288,
240.156530157,
240.493661941,
240.58802171,
240.25988656,
239.844385038,
239.498340965,
239.590049302,
239.753590211,
239.87510253,
240.361344714,
240.407452821,
240.455869199,
240.398453531,
240.701989475,
240.491267926,
240.632272521,
240.716660934,
240.749453978,
240.540834583,
240.633255313,
240.388153833,
240.545827926,
240.593380454,
240.694452158,
240.189807518,
240.171696738,
240.029496091,
240.194701397,
240.076888823,
240.005140004,
239.648327299,
239.447012993,
239.800873468,
239.459850611,
239.658258727,
239.870189064,
239.946456433
],
"t": [
1732729080,
1732729140,
1732729200,
1732729260,
1732729320,
1732729380,
1732729440,
1732729500,
1732729560,
1732729620,
1732729680,
1732729740,
1732729800,
1732729860,
1732729920,
1732729980,
1732730040,
1732730100,
1732730160,
1732730220,
1732730280,
1732730340,
1732730400,
1732730460,
1732730520,
1732730580,
1732730640,
1732730700,
1732730760,
1732730820,
1732730880,
1732730940,
1732731000,
1732731060,
1732731120,
1732731180,
1732731240,
1732731300,
1732731360,
1732731420,
1732731480,
1732731540,
1732731600,
1732731660,
1732731720,
1732731780,
1732731840,
1732731900,
1732731960,
1732732020,
1732732080,
1732732140,
1732732200,
1732732260,
1732732320,
1732732380,
1732732440,
1732732500,
1732732560,
1732732620,
1732732680
],
"volume": [
"120926.225073145",
"134865",
"147773.294722",
"151806.132322924",
"170785",
"88209.96922039",
"78290.211324342",
"102949.49161516402",
"135365.6002292",
"136203",
"108081",
"83128.5755571117",
"41016.266526746",
"71217.53280527",
"101937.63486045",
"50418.71808349",
"78641.9224498544",
"91411.254524098789",
"117794.8895265328",
"186575.701065",
"97324.746766898",
"105909.965686842",
"126314",
"69451.064775678",
"151603.3852025",
"171096",
"117098.2104954",
"99764",
"151402.8211521451",
"102328.768102382",
"79725.068099381",
"80489.7454095059",
"78422.073806904",
"146133.37815596",
"73669.30789524",
"97640",
"79056.029115",
"87005.7673961",
"109187.31783546",
"91447.1789290882",
"125411.630300815",
"84354.230475029",
"75119.25463453",
"108915.60174001",
"91239.97167851689",
"114826.8101695",
"35118.16800384",
"77672.09887681",
"96482.3715517",
"112045.90577948",
"70245",
"66531.617094574",
"86331.862853437",
"98551.6205046933",
"144419",
"82167",
"140593.046742151",
"210520",
"140759.5586585204",
"100600.48218219",
"30224.45776091"
],
"volumeNativeToken": [
"504.59123738027",
"563.1564727197998",
"617.2025171783",
"634.08208004884",
"712.546632044901",
"368.27999566361",
"326.823933600858",
"429.89939205440688",
"564.73482506032",
"567.73996851241",
"450.5326917214",
"346.786770731636",
"171.01918105882",
"296.83612417146",
"424.679484899",
"209.96063435042",
"327.44958452581",
"380.714257419514985",
"490.496188003517",
"777.051289891006",
"405.38087976429",
"440.915715204387",
"526.16649238218",
"289.2695956094",
"630.980219982",
"711.9365073346",
"486.965889533218",
"414.8040165104",
"630.607834068446",
"427.09852024301",
"332.72914932912",
"335.751825343311",
"327.064105841146",
"608.8313052519",
"306.38037293344",
"405.94734235969",
"328.70549565558",
"361.77968640572",
"453.9188379176",
"380.1890222861837",
"521.46770781278",
"350.50997632284",
"312.11850149266",
"452.71044325145",
"379.3112214225428",
"477.6418640422",
"146.00660297716",
"322.80272560703",
"401.101390402897",
"466.30753880594",
"292.392765945016",
"277.0923301051",
"359.67395922845",
"410.532369834578",
"602.26689791844",
"342.9907501216265",
"586.56081012677",
"878.026369346111",
"587.6645019936578",
"419.66308550555",
"125.99453103051"
],
"buys": [
36,
40,
31,
86,
42,
33,
17,
58,
52,
40,
27,
43,
26,
56,
57,
20,
35,
23,
54,
35,
49,
27,
46,
45,
32,
50,
40,
36,
38,
22,
36,
34,
28,
48,
31,
31,
46,
62,
47,
30,
43,
25,
19,
35,
39,
55,
22,
41,
16,
41,
37,
61,
46,
37,
30,
40,
47,
59,
44,
44,
25
],
"buyers": [
28,
35,
23,
59,
10,
17,
16,
46,
21,
22,
23,
36,
21,
37,
31,
19,
25,
14,
42,
23,
41,
24,
28,
34,
22,
27,
19,
32,
31,
16,
20,
12,
17,
13,
21,
22,
39,
50,
44,
17,
27,
16,
15,
29,
28,
39,
10,
19,
13,
24,
27,
35,
28,
27,
25,
32,
19,
34,
18,
13,
13
],
"buyVolume": [
"35379",
"75001",
"63462",
"96070",
"78757",
"46630",
"30835",
"58843",
"84043",
"73967",
"40471",
"41911",
"34099",
"39507",
"59786",
"26367",
"35079",
"44523",
"69404",
"76763",
"63782",
"44746",
"58013",
"44513",
"74962",
"103735",
"66383",
"29216",
"51189",
"29813",
"45271",
"50117",
"47036",
"103574",
"40591",
"50439",
"36084",
"61824",
"41799",
"54203",
"68753",
"43713",
"25004",
"59643",
"30763",
"67670",
"21483",
"44872",
"17223",
"55300",
"25414",
"43105",
"36221",
"44348",
"50296",
"28672",
"92561",
"83950",
"83060",
"62514",
"20205"
],
"sells": [
79,
56,
71,
57,
119,
39,
47,
60,
100,
48,
49,
42,
18,
30,
35,
30,
45,
28,
54,
53,
31,
35,
51,
23,
63,
70,
54,
60,
75,
42,
34,
34,
45,
47,
57,
71,
44,
39,
48,
36,
30,
44,
61,
32,
43,
34,
28,
37,
59,
57,
27,
22,
34,
46,
39,
28,
36,
66,
53,
41,
9
],
"sellers": [
51,
40,
58,
44,
89,
29,
24,
40,
71,
42,
38,
23,
18,
27,
29,
27,
28,
23,
43,
34,
29,
22,
36,
22,
51,
52,
47,
34,
30,
23,
27,
26,
35,
39,
42,
42,
24,
21,
26,
22,
22,
34,
39,
23,
17,
19,
21,
27,
23,
30,
19,
19,
24,
31,
15,
17,
26,
38,
37,
40,
5
],
"sellVolume": [
"85550",
"59864",
"84310",
"55735",
"92028",
"41579",
"47455",
"44106",
"51320",
"62236",
"67610",
"41217",
"6916",
"31709",
"42154",
"24051",
"43564",
"46884",
"48392",
"109809",
"33543",
"61162",
"68301",
"24935",
"76639",
"67361",
"50711",
"70548",
"100216",
"72510",
"34461",
"30370",
"31388",
"42560",
"33082",
"47201",
"42971",
"25180",
"67387",
"37246",
"56657",
"40642",
"50120",
"49277",
"60478",
"47153",
"13632",
"32802",
"79259",
"56745",
"44831",
"23425",
"50111",
"54203",
"94123",
"53495",
"48033",
"126570",
"57698",
"38088",
"10020"
],
"liquidity": [
"4215063.94652",
"4232464.50006",
"4210813.33846",
"4252103.5043",
"4238737.96924",
"4243695.50826",
"4225330.09028",
"4246646.98936",
"4277923.26414",
"4286932.53232",
"4259154.12261",
"4259894.37445",
"4283348.13859",
"4291277.40151",
"4312094.6173",
"4312435.24115",
"4303932.10007",
"4301788.00337",
"4322655.52687",
"4289894.88254",
"4320181.89005",
"4303048.44082",
"4293122.53859",
"4312816.70274",
"4311920.57939",
"4352264.64277",
"4363540.48313",
"4322495.19052",
"4273228.69867",
"4230470.94869",
"4241431.25825",
"4261273.53316",
"4277458.4326",
"4338174.17501",
"4344391.69476",
"4348740.66565",
"4341854.76754",
"4378471.01973",
"4352896.33739",
"4369878.31",
"4380260.53052",
"4384352.51969",
"4359352.69887",
"4369829.63591",
"4340127.62535",
"4359779.86776",
"4367891.29685",
"4356953.31764",
"4297197.19929",
"4304951.87269",
"4288433.65467",
"4307905.05134",
"4293973.04059",
"4284875.81161",
"4240426.70225",
"4215532.23384",
"4259913.2615",
"4217333.07803",
"4242614.82779",
"4267329.33972",
"4276070.65897"
],
"traders": [
78,
71,
77,
98,
99,
45,
40,
81,
90,
60,
59,
54,
38,
59,
57,
44,
49,
35,
81,
51,
66,
44,
60,
53,
68,
72,
65,
62,
54,
36,
44,
35,
50,
52,
60,
59,
60,
66,
65,
34,
43,
46,
51,
46,
41,
54,
27,
44,
35,
51,
45,
50,
47,
54,
37,
46,
40,
65,
50,
50,
17
],
"transactions": [
115,
96,
102,
143,
161,
72,
64,
118,
152,
88,
76,
85,
44,
86,
92,
50,
80,
51,
108,
88,
80,
62,
97,
68,
95,
120,
94,
96,
113,
64,
70,
68,
73,
95,
88,
102,
90,
101,
95,
66,
73,
69,
80,
67,
82,
89,
50,
78,
75,
98,
64,
83,
80,
83,
69,
68,
83,
125,
97,
85,
34
]
}
}`}
  </pre>
);

export default ExploreNow;
